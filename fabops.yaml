---
- name: Start fabric operations
  hosts: minifab
  gather_facts: no
  connection: local
  vars:
    pjroot: "{{ playbook_dir }}"
  vars_files:
    - "./spec.yaml"
    - "./playbooks/ops/opnames.yaml"
  tasks:
    - set_fact:
        allops: "{{ mode.split(',')|list }}"
        status_flag: "Success"

    - name: Remove approve and commit from the operation list if release is less than 2.0
      set_fact:
        allops: "{{ allops | difference(['ccapprove', 'cccommit']) }}"
        OPNAMES: "{{ OPNAMES | combine({'ccinstantiate': 'cc instantiate'}) }}"
      when: IMAGETAG is version('2.0', '<')

    - meta: end_play
      when: allops|length == 0

    - set_fact:
        msgops: "{{ (msgops|default([])) + [OPNAMES[item]] }}"
      with_items: "{{ allops }}"

    - name: "Fabric operations"
      debug:
        msg: "{{ msgops|join(', ') }}"
      tags: [print_action]

    - name: "Process configuration"
      include_tasks: "playbooks/common/config_apply.yaml"

    - name: Check if external node endpoint exists
      stat: 
        path: "{{ pjroot }}/vars/ext_node_vars.json"
      register: exflag

    - name: "Load external node vars"
      include_vars: "{{ pjroot }}/vars/ext_node_vars.json"
      when: exflag.stat.exists == true

    - name: Do all the requested fabric operations
      include_tasks: "playbooks/ops/{{ op }}/apply.yaml"
      loop: "{{ allops }}"
      loop_control:
        loop_var: op
      when: >-
        status_flag == "Success" and (allpeers|length) > 0 and
        ( allops[0] == 'nodeimport' or (allorderers|length) > 0 or
         (ext_orderers is defined and (ext_orderers|length) > 0) )
